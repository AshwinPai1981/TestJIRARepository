<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI" xmlns:ComIbmCompute.msgnode="ComIbmCompute.msgnode" xmlns:ComIbmMQInput.msgnode="ComIbmMQInput.msgnode" xmlns:ComIbmMQOutput.msgnode="ComIbmMQOutput.msgnode" xmlns:ComIbmWSInput.msgnode="ComIbmWSInput.msgnode" xmlns:com_kingfisher_gha_aisle_Response.subflow="com/kingfisher/gha/aisle/Response.subflow" xmlns:com_kingfisher_gha_aisle_RouteToMethod.subflow="com/kingfisher/gha/aisle/RouteToMethod.subflow" xmlns:com_kingfisher_gha_common_ErrorResponse.subflow="com/kingfisher/gha/common/ErrorResponse.subflow"
    xmlns:com_kingfisher_ukbq_errorhandlers_HTTPFaultHandler.subflow="com/kingfisher/ukbq/errorhandlers/HTTPFaultHandler.subflow" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:eflow="http://www.ibm.com/wbi/2005/eflow" xmlns:mbmonitor="http://www.ibm.com/wbi/2008/eflow_mbmonitor" xmlns:utility="http://www.ibm.com/wbi/2005/eflow_utility" nsURI="com/kingfisher/gha/aisle/Aisle_Gateway.msgflow"
    nsPrefix="com_kingfisher_gha_aisle_Aisle_Gateway.msgflow">
  <eClassifiers xmi:type="eflow:FCMComposite" name="FCMComposite_1">
    <eSuperTypes href="http://www.ibm.com/wbi/2005/eflow#//FCMBlock"/>
    <translation xmi:type="utility:TranslatableString" key="Aisle_Gateway" bundleName="com/kingfisher/gha/aisle/Aisle_Gateway" pluginId="Aisle_Gateway"/>
    <colorGraphic16 xmi:type="utility:GIFFileGraphic" resourceName="platform:/plugin/Aisle_Gateway/icons/full/obj16/Aisle_Gateway.gif"/>
    <colorGraphic32 xmi:type="utility:GIFFileGraphic" resourceName="platform:/plugin/Aisle_Gateway/icons/full/obj30/Aisle_Gateway.gif"/>
    <composition>
      <nodes xmi:type="ComIbmWSInput.msgnode:FCMComposite_1" xmi:id="FCMComposite_1_1" location="179,363" URLSpecifier="/Aisle*" setDestinationList="true" parseQueryString="true" messageDomainProperty="BLOB">
        <translation xmi:type="utility:ConstantString" string="HTTP Input"/>
        <monitorEvents eventSourceDescription="Transaction start" eventSourceName="HTTP Input.transaction.Start" eventIdentity="HTTP Input.TransactionStart">
          <eventXMLDoc xmi:type="mbmonitor:MonitorEvent">
            <globalTransactionCorrelator dataLocation="$Root/HTTPInputHeader/Kits-Global-Id" eventCorrelation="dataLocation"/>
            <parentTransactionCorrelator dataLocation="$Root/HTTPInputHeader/Kits-Request-Id" eventCorrelation="dataLocation"/>
            <localTransactionCorrelator/>
            <bitStreamData encoding="none" bitstreamContent="none"/>
            <eventName literal="HTTP Input.TransactionStart"/>
            <eventFilter dataLocation="true()" isXPath="true"/>
          </eventXMLDoc>
        </monitorEvents>
        <monitorEvents eventSourceDescription="Transaction end" eventSourceName="HTTP Input.transaction.End" eventIdentity="HTTP Input.TransactionEnd">
          <eventXMLDoc xmi:type="mbmonitor:MonitorEvent">
            <globalTransactionCorrelator dataLocation="$Root/HTTPInputHeader/Kits-Global-Id" eventCorrelation="dataLocation"/>
            <parentTransactionCorrelator dataLocation="$Root/HTTPInputHeader/Kits-Request-Id" eventCorrelation="dataLocation"/>
            <localTransactionCorrelator/>
            <bitStreamData encoding="none" bitstreamContent="none"/>
            <eventName literal="HTTP Input.TransactionEnd"/>
            <eventFilter dataLocation="true()" isXPath="true"/>
          </eventXMLDoc>
        </monitorEvents>
        <monitorEvents eventSourceDescription="Out terminal" eventSourceName="HTTP Input.terminal.out" eventIdentity="HTTP Input.OutTerminal">
          <eventXMLDoc xmi:type="mbmonitor:MonitorEvent">
            <globalTransactionCorrelator dataLocation="$Root/HTTPInputHeader/Kits-Global-Id" eventCorrelation="dataLocation"/>
            <parentTransactionCorrelator dataLocation="$Root/HTTPInputHeader/Kits-Request-Id" eventCorrelation="dataLocation"/>
            <localTransactionCorrelator/>
            <bitStreamData encoding="base64Binary"/>
            <eventName literal="HTTP Input.OutTerminal"/>
            <eventFilter dataLocation="true()" isXPath="true"/>
          </eventXMLDoc>
        </monitorEvents>
        <monitorEvents eventSourceDescription="Catch terminal" eventSourceName="HTTP Input.terminal.catch" eventIdentity="HTTP Input.CatchTerminal">
          <eventXMLDoc xmi:type="mbmonitor:MonitorEvent">
            <globalTransactionCorrelator dataLocation="$Root/HTTPInputHeader/Kits-Global-Id" eventCorrelation="dataLocation"/>
            <parentTransactionCorrelator dataLocation="$Root/HTTPInputHeader/Kits-Request-Id" eventCorrelation="dataLocation"/>
            <localTransactionCorrelator/>
            <bitStreamData encoding="base64Binary"/>
            <eventName literal="HTTP Input.CatchTerminal"/>
            <eventFilter dataLocation="true()" isXPath="true"/>
          </eventXMLDoc>
        </monitorEvents>
        <monitorEvents eventSourceDescription="Failure terminal" eventSourceName="HTTP Input.terminal.failure" eventIdentity="HTTP Input.FailureTerminal">
          <eventXMLDoc xmi:type="mbmonitor:MonitorEvent">
            <globalTransactionCorrelator dataLocation="$Root/HTTPInputHeader/Kits-Global-Id" eventCorrelation="dataLocation"/>
            <parentTransactionCorrelator dataLocation="$Root/HTTPInputHeader/Kits-Request-Id" eventCorrelation="dataLocation"/>
            <localTransactionCorrelator/>
            <bitStreamData encoding="base64Binary"/>
            <eventName literal="HTTP Input.FailureTerminal"/>
            <eventFilter dataLocation="true()" isXPath="true"/>
          </eventXMLDoc>
        </monitorEvents>
      </nodes>
      <nodes xmi:type="com_kingfisher_ukbq_errorhandlers_HTTPFaultHandler.subflow:FCMComposite_1" xmi:id="FCMComposite_1_2" location="344,269">
        <translation xmi:type="utility:ConstantString" string="HTTPFaultHandler"/>
      </nodes>
      <nodes xmi:type="ComIbmCompute.msgnode:FCMComposite_1" xmi:id="FCMComposite_1_3" location="376,359" computeExpression="esql://routine/com.kingfisher.gha.aisle#Aisle_Gateway_Initialise.Main">
        <translation xmi:type="utility:ConstantString" string="Initialise"/>
      </nodes>
      <nodes xmi:type="ComIbmMQInput.msgnode:FCMComposite_1" xmi:id="FCMComposite_1_4" location="118,526" queueName="AISLEGET.OUT.INTERNAL.WMB" messageDomainProperty="JSON">
        <translation xmi:type="utility:ConstantString" string="AISLEGET.OUT.INTERNAL.WMB"/>
        <monitorEvents eventSourceDescription="Transaction start" eventSourceName="AISLEGET.OUT.INTERNAL.WMB.transaction.Start" eventIdentity="AISLEGET.OUT.INTERNAL.WMB.TransactionStart">
          <eventXMLDoc xmi:type="mbmonitor:MonitorEvent">
            <globalTransactionCorrelator dataLocation="$Root/MQRFH2/usr/MetaData/properties/globalTransactionId" eventCorrelation="dataLocation"/>
            <parentTransactionCorrelator dataLocation="$Root/MQRFH2/usr/MetaData/properties/requestUuid" eventCorrelation="dataLocation"/>
            <localTransactionCorrelator/>
            <bitStreamData encoding="none" bitstreamContent="none"/>
            <eventName literal="AISLEGET.OUT.INTERNAL.WMB.TransactionStart"/>
            <eventFilter dataLocation="true()" isXPath="true"/>
          </eventXMLDoc>
        </monitorEvents>
        <monitorEvents eventSourceDescription="Transaction end" eventSourceName="AISLEGET.OUT.INTERNAL.WMB.transaction.End" eventIdentity="AISLEGET.OUT.INTERNAL.WMB.TransactionEnd">
          <eventXMLDoc xmi:type="mbmonitor:MonitorEvent">
            <globalTransactionCorrelator dataLocation="$Root/MQRFH2/usr/MetaData/properties/globalTransactionId" eventCorrelation="dataLocation"/>
            <parentTransactionCorrelator dataLocation="$Root/MQRFH2/usr/MetaData/properties/requestUuid" eventCorrelation="dataLocation"/>
            <localTransactionCorrelator/>
            <bitStreamData encoding="none" bitstreamContent="none"/>
            <eventName literal="AISLEGET.OUT.INTERNAL.WMB.TransactionEnd"/>
            <eventFilter dataLocation="true()" isXPath="true"/>
          </eventXMLDoc>
        </monitorEvents>
        <monitorEvents eventSourceDescription="Out terminal" eventSourceName="AISLEGET.OUT.INTERNAL.WMB.terminal.out" eventIdentity="AISLEGET.OUT.INTERNAL.WMB.OutTerminal">
          <eventXMLDoc xmi:type="mbmonitor:MonitorEvent">
            <globalTransactionCorrelator dataLocation="$Root/MQRFH2/usr/MetaData/properties/globalTransactionId" eventCorrelation="dataLocation"/>
            <parentTransactionCorrelator dataLocation="$Root/MQRFH2/usr/MetaData/properties/requestUuid" eventCorrelation="dataLocation"/>
            <localTransactionCorrelator/>
            <bitStreamData encoding="base64Binary"/>
            <eventName literal="AISLEGET.OUT.INTERNAL.WMB.OutTerminal"/>
            <eventFilter dataLocation="true()" isXPath="true"/>
          </eventXMLDoc>
        </monitorEvents>
        <monitorEvents eventSourceDescription="Catch terminal" eventSourceName="AISLEGET.OUT.INTERNAL.WMB.terminal.catch" eventIdentity="AISLEGET.OUT.INTERNAL.WMB.CatchTerminal">
          <eventXMLDoc xmi:type="mbmonitor:MonitorEvent">
            <globalTransactionCorrelator dataLocation="$Root/MQRFH2/usr/MetaData/properties/globalTransactionId" eventCorrelation="dataLocation"/>
            <parentTransactionCorrelator dataLocation="$Root/MQRFH2/usr/MetaData/properties/requestUuid" eventCorrelation="dataLocation"/>
            <localTransactionCorrelator/>
            <bitStreamData encoding="base64Binary"/>
            <eventName literal="AISLEGET.OUT.INTERNAL.WMB.CatchTerminal"/>
            <eventFilter dataLocation="true()" isXPath="true"/>
          </eventXMLDoc>
        </monitorEvents>
        <monitorEvents eventSourceDescription="Failure terminal" eventSourceName="AISLEGET.OUT.INTERNAL.WMB.terminal.failure" eventIdentity="AISLEGET.OUT.INTERNAL.WMB.FailureTerminal">
          <eventXMLDoc xmi:type="mbmonitor:MonitorEvent">
            <globalTransactionCorrelator dataLocation="$Root/MQRFH2/usr/MetaData/properties/globalTransactionId" eventCorrelation="dataLocation"/>
            <parentTransactionCorrelator dataLocation="$Root/MQRFH2/usr/MetaData/properties/requestUuid" eventCorrelation="dataLocation"/>
            <localTransactionCorrelator/>
            <bitStreamData encoding="base64Binary"/>
            <eventName literal="AISLEGET.OUT.INTERNAL.WMB.FailureTerminal"/>
            <eventFilter dataLocation="true()" isXPath="true"/>
          </eventXMLDoc>
        </monitorEvents>
      </nodes>
      <nodes xmi:type="ComIbmCompute.msgnode:FCMComposite_1" xmi:id="FCMComposite_1_7" location="352,526" dataSource="MBREPOS" computeExpression="esql://routine/com.kingfisher.gha.aisle#Response_Compute.Main" computeMode="destinationAndMessage">
        <translation xmi:type="utility:ConstantString" string="CnC_getAisleMappings"/>
      </nodes>
      <nodes xmi:type="ComIbmCompute.msgnode:FCMComposite_1" xmi:id="FCMComposite_1_10" location="350,603" computeExpression="esql://routine/com.kingfisher.gha.aisle#postResponse_Compute.Main" computeMode="destinationAndMessage">
        <translation xmi:type="utility:ConstantString" string="CnC_postAisleMappings"/>
      </nodes>
      <nodes xmi:type="ComIbmMQInput.msgnode:FCMComposite_1" xmi:id="FCMComposite_1_12" location="112,603" queueName="AISLEPOST.OUT.INTERNAL.WMB" messageDomainProperty="JSON">
        <translation xmi:type="utility:ConstantString" string="AISLEPOST.OUT.INTERNAL.WMB"/>
        <monitorEvents eventSourceDescription="Transaction start" eventSourceName="AISLEPOST.OUT.INTERNAL.WMB.transaction.Start" eventIdentity="AISLEPOST.OUT.INTERNAL.WMB.TransactionStart">
          <eventXMLDoc xmi:type="mbmonitor:MonitorEvent">
            <globalTransactionCorrelator dataLocation="$Root/MQRFH2/usr/MetaData/properties/globalTransactionId" eventCorrelation="dataLocation"/>
            <parentTransactionCorrelator dataLocation="$Root/MQRFH2/usr/MetaData/properties/requestUuid" eventCorrelation="dataLocation"/>
            <localTransactionCorrelator/>
            <bitStreamData encoding="none" bitstreamContent="none"/>
            <eventName literal="AISLEPOST.OUT.INTERNAL.WMB.TransactionStart"/>
            <eventFilter dataLocation="true()" isXPath="true"/>
          </eventXMLDoc>
        </monitorEvents>
        <monitorEvents eventSourceDescription="Transaction end" eventSourceName="AISLEPOST.OUT.INTERNAL.WMB.transaction.End" eventIdentity="AISLEPOST.OUT.INTERNAL.WMB.TransactionEnd">
          <eventXMLDoc xmi:type="mbmonitor:MonitorEvent">
            <globalTransactionCorrelator dataLocation="$Root/MQRFH2/usr/MetaData/properties/globalTransactionId" eventCorrelation="dataLocation"/>
            <parentTransactionCorrelator dataLocation="$Root/MQRFH2/usr/MetaData/properties/requestUuid" eventCorrelation="dataLocation"/>
            <localTransactionCorrelator/>
            <bitStreamData encoding="none" bitstreamContent="none"/>
            <eventName literal="AISLEPOST.OUT.INTERNAL.WMB.TransactionEnd"/>
            <eventFilter dataLocation="true()" isXPath="true"/>
          </eventXMLDoc>
        </monitorEvents>
        <monitorEvents eventSourceDescription="Out terminal" eventSourceName="AISLEPOST.OUT.INTERNAL.WMB.terminal.out" eventIdentity="AISLEPOST.OUT.INTERNAL.WMB.OutTerminal">
          <eventXMLDoc xmi:type="mbmonitor:MonitorEvent">
            <globalTransactionCorrelator dataLocation="$Root/MQRFH2/usr/MetaData/properties/globalTransactionId" eventCorrelation="dataLocation"/>
            <parentTransactionCorrelator dataLocation="$Root/MQRFH2/usr/MetaData/properties/requestUuid" eventCorrelation="dataLocation"/>
            <localTransactionCorrelator/>
            <bitStreamData encoding="base64Binary"/>
            <eventName literal="AISLEPOST.OUT.INTERNAL.WMB.OutTerminal"/>
            <eventFilter dataLocation="true()" isXPath="true"/>
          </eventXMLDoc>
        </monitorEvents>
        <monitorEvents eventSourceDescription="Catch terminal" eventSourceName="AISLEPOST.OUT.INTERNAL.WMB.terminal.catch" eventIdentity="AISLEPOST.OUT.INTERNAL.WMB.CatchTerminal">
          <eventXMLDoc xmi:type="mbmonitor:MonitorEvent">
            <globalTransactionCorrelator dataLocation="$Root/MQRFH2/usr/MetaData/properties/globalTransactionId" eventCorrelation="dataLocation"/>
            <parentTransactionCorrelator dataLocation="$Root/MQRFH2/usr/MetaData/properties/requestUuid" eventCorrelation="dataLocation"/>
            <localTransactionCorrelator/>
            <bitStreamData encoding="base64Binary"/>
            <eventName literal="AISLEPOST.OUT.INTERNAL.WMB.CatchTerminal"/>
            <eventFilter dataLocation="true()" isXPath="true"/>
          </eventXMLDoc>
        </monitorEvents>
        <monitorEvents eventSourceDescription="Failure terminal" eventSourceName="AISLEPOST.OUT.INTERNAL.WMB.terminal.failure" eventIdentity="AISLEPOST.OUT.INTERNAL.WMB.FailureTerminal">
          <eventXMLDoc xmi:type="mbmonitor:MonitorEvent">
            <globalTransactionCorrelator dataLocation="$Root/MQRFH2/usr/MetaData/properties/globalTransactionId" eventCorrelation="dataLocation"/>
            <parentTransactionCorrelator dataLocation="$Root/MQRFH2/usr/MetaData/properties/requestUuid" eventCorrelation="dataLocation"/>
            <localTransactionCorrelator/>
            <bitStreamData encoding="base64Binary"/>
            <eventName literal="AISLEPOST.OUT.INTERNAL.WMB.FailureTerminal"/>
            <eventFilter dataLocation="true()" isXPath="true"/>
          </eventXMLDoc>
        </monitorEvents>
      </nodes>
      <nodes xmi:type="com_kingfisher_gha_aisle_RouteToMethod.subflow:FCMComposite_1" xmi:id="FCMComposite_1_5" location="566,360">
        <translation xmi:type="utility:ConstantString" string="RouteToMethod"/>
      </nodes>
      <nodes xmi:type="com_kingfisher_gha_aisle_Response.subflow:FCMComposite_1" xmi:id="FCMComposite_1_6" location="599,527">
        <translation xmi:type="utility:ConstantString" string="Response"/>
      </nodes>
      <nodes xmi:type="com_kingfisher_gha_common_ErrorResponse.subflow:FCMComposite_1" xmi:id="FCMComposite_1_8" location="376,445">
        <translation xmi:type="utility:ConstantString" string="ErrorResponse"/>
      </nodes>
      <nodes xmi:type="ComIbmMQOutput.msgnode:FCMComposite_1" xmi:id="FCMComposite_1_9" location="546,449" queueName="ERRORS.CNC.OUT.WMB" transactionMode="no" validateMaster="none">
        <translation xmi:type="utility:ConstantString" string="Error_MQOutput_SourceMsg"/>
      </nodes>
      <connections xmi:type="eflow:FCMConnection" xmi:id="FCMConnection_1" targetNode="FCMComposite_1_2" sourceNode="FCMComposite_1_1" sourceTerminalName="OutTerminal.catch" targetTerminalName="InTerminal.WMB_Input_SOAPError"/>
      <connections xmi:type="eflow:FCMConnection" xmi:id="FCMConnection_2" targetNode="FCMComposite_1_2" sourceNode="FCMComposite_1_1" sourceTerminalName="OutTerminal.failure" targetTerminalName="InTerminal.WMB_Input_SOAPError"/>
      <connections xmi:type="eflow:FCMConnection" xmi:id="FCMConnection_3" targetNode="FCMComposite_1_3" sourceNode="FCMComposite_1_1" sourceTerminalName="OutTerminal.out" targetTerminalName="InTerminal.in"/>
      <connections xmi:type="eflow:FCMConnection" xmi:id="FCMConnection_5" targetNode="FCMComposite_1_7" sourceNode="FCMComposite_1_4" sourceTerminalName="OutTerminal.out" targetTerminalName="InTerminal.in"/>
      <connections xmi:type="eflow:FCMConnection" xmi:id="FCMConnection_7" targetNode="FCMComposite_1_10" sourceNode="FCMComposite_1_12" sourceTerminalName="OutTerminal.out" targetTerminalName="InTerminal.in"/>
      <connections xmi:type="eflow:FCMConnection" xmi:id="FCMConnection_4" targetNode="FCMComposite_1_5" sourceNode="FCMComposite_1_3" sourceTerminalName="OutTerminal.out" targetTerminalName="InTerminal.Input"/>
      <connections xmi:type="eflow:FCMConnection" xmi:id="FCMConnection_6" targetNode="FCMComposite_1_6" sourceNode="FCMComposite_1_7" sourceTerminalName="OutTerminal.out" targetTerminalName="InTerminal.Input"/>
      <connections xmi:type="eflow:FCMConnection" xmi:id="FCMConnection_8" targetNode="FCMComposite_1_6" sourceNode="FCMComposite_1_10" sourceTerminalName="OutTerminal.out" targetTerminalName="InTerminal.Input"/>
      <connections xmi:type="eflow:FCMConnection" xmi:id="FCMConnection_9" targetNode="FCMComposite_1_9" sourceNode="FCMComposite_1_8" sourceTerminalName="OutTerminal.Output1" targetTerminalName="InTerminal.in"/>
      <connections xmi:type="eflow:FCMConnection" xmi:id="FCMConnection_10" targetNode="FCMComposite_1_6" sourceNode="FCMComposite_1_8" sourceTerminalName="OutTerminal.Output" targetTerminalName="InTerminal.Input"/>
      <connections xmi:type="eflow:FCMConnection" xmi:id="FCMConnection_11" targetNode="FCMComposite_1_8" sourceNode="FCMComposite_1_4" sourceTerminalName="OutTerminal.failure" targetTerminalName="InTerminal.Input"/>
      <connections xmi:type="eflow:FCMConnection" xmi:id="FCMConnection_12" targetNode="FCMComposite_1_8" sourceNode="FCMComposite_1_4" sourceTerminalName="OutTerminal.catch" targetTerminalName="InTerminal.Input"/>
      <connections xmi:type="eflow:FCMConnection" xmi:id="FCMConnection_13" targetNode="FCMComposite_1_8" sourceNode="FCMComposite_1_12" sourceTerminalName="OutTerminal.failure" targetTerminalName="InTerminal.Input"/>
      <connections xmi:type="eflow:FCMConnection" xmi:id="FCMConnection_14" targetNode="FCMComposite_1_8" sourceNode="FCMComposite_1_12" sourceTerminalName="OutTerminal.catch" targetTerminalName="InTerminal.Input"/>
    </composition>
    <propertyOrganizer/>
    <stickyBoard>
      <stickyNote location="7,19">
        <body xmi:type="utility:ConstantString" string=" &#xA;Name           : Aisle_Gateway                                                                                                                                                                                                                                                                                                                                                                                                                   &#xA;Author         : Abhishek Yadav&#xA;Date             : May 2015&#xA;&#xA;Description  : 1. Accept JSON structured message from UI.&#xA;                        2. Route the message to different message flows with respect to different operations.&#xA;                        3. Store the request data for future processing . &#xA;                        4. Get the SAP response back from message flow via MQ queue in a JSON structed way .&#xA;                        5. Return the response to the UI.&#xA;                "/>
      </stickyNote>
    </stickyBoard>
  </eClassifiers>
</ecore:EPackage>
