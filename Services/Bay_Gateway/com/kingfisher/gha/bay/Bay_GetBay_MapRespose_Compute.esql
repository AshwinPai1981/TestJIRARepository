BROKER SCHEMA com.kingfisher.gha.bay
PATH com.kingfisher.gha.common;

/*****************************************************************************************************
* COPYRIGHT. <KINGFISHER INFORMATION TECHNOLOGY SERVICES 2012> ALL RIGHTS RESERVED. NO PART OF THIS  *
* SOURCE CODE MAY BE REPRODUCED, STORED IN A RETRIEVAL SYSTEM, OR TRANSMITTED,IN ANY 				 *
* FORM BY ANY MEANS, ELECTRONIC, MECHANICAL, PHOTOCOPYING, RECORDING OR OTHERWISE, 					 *
* WITHOUT THE PRIOR WRITTEN PERMISSION OF <KINGFISHER INFORMATION TECHNOLOGY SERVICES>. 			 *
****************************************************************************************************/
/*************************************************************************************************** *
* Node Name 				: MapResponse											 				 *											
* Interface Id 				: 254.1																	 *								
* Interface Name 			: Bay_Gateway		 													 *							
* Message Flow 				: Bay_ReadBay_Get														 *									
* Message Flow Description 	: The primary function of this message flow/service is to retrieve Bay   *
                              information in a store and create the JSON response                    *								
* Module Name 				: com.kingfisher.gha.bay.Bay_GetBay_MapRespose_Compute					 *									
* Description 				: The module create the JSON Bay response from SAP						 *
*							  																		 *
*																									 *
* Version 	Date 			Author 				Description 										 *
* ======= 	========= 		========== 			=================== 								 *
* 1.00		30/03/2016  	Abhishek Ray 		Initial Version		
* 1.10      29/04/2016      Abhishek Ray		CSA - 1359: Using selects instead of loops to 		 *
                                                generate JSON  			 					         *
*****************************************************************************************************/
CREATE COMPUTE MODULE Bay_GetBay_MapRespose_Compute
	DECLARE CH_BROKER CHARACTER getConfigValue('BROKER_URL');
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- Copy Message Properties only
		SET OutputRoot.Properties = InputRoot.Properties;
		
		-- Restore the Msg ID, reply queue,metadata, request identifier etc from Enviroment and set it to MQRFH2 header for Gateway service.
		SET OutputRoot.MQMD = Environment.Store.MQMD;
	    SET OutputRoot.MQRFH2 = Environment.Store.MQRFH2;
	    SET OutputRoot.MQRFH2.usr.bayFromURI = Environment.Store.bayFromURI;
	    SET OutputRoot.MQRFH2.usr.storeCode  = Environment.Store.storeCode;
	    SET OutputRoot.MQRFH2.usr.bayFilter  = Environment.Store.bayFilter;
	    
	    DECLARE oRef        REFERENCE TO OutputRoot.JSON.Data;
	    DECLARE iRef 		REFERENCE TO InputRoot.XMLNSC.NS_urn:ZSofReadBayResponse;
	    DECLARE iRef_Bays   REFERENCE TO iRef.EtBays;
	    DECLARE iRef_Ret	REFERENCE TO iRef.EtReturn;
	    DECLARE pos		    INTEGER 1;
	    DECLARE errorCount	INTEGER	1;     
	    
	    
	    IF EXISTS(iRef_Bays.item[]) = FALSE THEN
	    	CREATE FIELD OutputRoot.JSON.Data AS oRef;
	    	CREATE FIELD oRef.Class IDENTITY (JSON.Array)Class;
			SET oRef.Class.Item[1] VALUE = 'Response';
			DECLARE oRefProp REFERENCE TO  oRef.properties;
			CREATE FIELD  oRef.properties AS oRefProp;
			SET oRefProp.type = 'ERROR';
			CREATE FIELD oRefProp.info IDENTITY (JSON.Array)info;
			SET oRefProp.info.Item[1].serviceName   = MessageFlowLabel;
			SET oRefProp.info.Item[1].statusCode    = '404';
			SET oRefProp.info.Item[1].statusMessage = 'Invalid aisle-bay'; 
			
	    ELSEIF	EXISTS(iRef_Bays.item[]) = FALSE AND EXISTS(iRef_Ret.item[]) THEN
	    	CREATE FIELD OutputRoot.JSON.Data AS oRef;
	    	CREATE FIELD oRef.Class IDENTITY (JSON.Array)Class;
			SET oRef.Class.Item[1] VALUE = 'Response';
			DECLARE oRefProp REFERENCE TO  oRef.properties;
			CREATE FIELD  oRef.properties AS oRefProp;
			SET oRefProp.type = 'ERROR';
			CREATE FIELD oRefProp.info IDENTITY (JSON.Array)info;
			FOR error AS iRef_Ret.item[] DO
				SET oRefProp.info.Item[errorCount].serviceName   = MessageFlowLabel;
				SET oRefProp.info.Item[errorCount].statusCode    = error.Number;
				SET oRefProp.info.Item[errorCount].statusMessage = error.Message;
			END FOR;
				
	    ELSE
	    	SET Environment.ClassName = 'Bay'; 
	    	CREATE FIELD OutputRoot.JSON.Data AS oRef IDENTITY (JSON.Array)Data;
			SET oRef.Item[] = SELECT  Environment.ClassName AS (JSON.Array)Class.Item[1],
            			              FUNC_CONCAT(I.AisleNum, I.Bay) AS properties.bayNumber,
									  I.AisleNum AS properties.aisleNumber,
						  			  Environment.Store.storeCode AS properties.siteNumber,
						  			  I.BayDescp AS properties.description
				  			  FROM iRef_Bays.item[] AS I;
	    END IF;    	
		RETURN TRUE;
	END;
	
	CREATE FUNCTION FUNC_CONCAT(IN aisle CHARACTER, IN bay CHARACTER) RETURNS CHARACTER
	BEGIN
		RETURN (aisle || bay);
	END;	

END MODULE;
